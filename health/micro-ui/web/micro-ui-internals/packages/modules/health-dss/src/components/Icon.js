import React from "react";
import { CustomSVG } from "@egovernments/digit-ui-components";

const Bednet = ({ width = 26, height = 32, fill = "#C84C0E", className }) => (
  <svg xmlns="http://www.w3.org/2000/svg" width={width} height={height} viewBox="0 0 26 32" fill="none" className={className}>
    <path
      d="M25.0442 0.313055H0.958705C0.737721 0.313055 0.558594 0.541011 0.558594 0.822235V31.4725C0.558594 31.7537 0.737721 31.9816 0.958705 31.9816H25.0435C25.2645 31.9816 25.4436 31.7537 25.4436 31.4725V0.821325C25.4436 0.540466 25.2645 0.3125 25.0438 0.3125L25.0442 0.313055ZM20.3819 30.9633H15.9888C16.0125 29.4375 16.1403 28.6066 16.2762 27.7395C16.3499 27.2694 16.4246 26.7894 16.4821 26.1957C17.0998 26.3367 17.8328 26.4528 19.0067 26.4528C19.7846 26.4528 20.3688 26.4017 20.8546 26.3264C20.8052 26.7663 20.746 27.1509 20.6849 27.5407C20.5471 28.4181 20.4068 29.3313 20.3819 30.9632V30.9633ZM6.07203 26.4237C6.34992 26.4415 6.65321 26.4528 6.99916 26.4528C8.54044 26.4528 9.32336 26.2529 10.0809 26.0597C10.2221 26.0239 10.363 25.9887 10.5064 25.9543C10.4517 26.5608 10.3767 27.0451 10.2988 27.5407C10.1613 28.4181 10.0209 29.3314 9.9961 30.9633H5.60328C5.62699 29.4375 5.75479 28.6066 5.89066 27.7395C5.95456 27.3319 6.01873 26.9133 6.07203 26.4236V26.4237ZM5.89066 4.5534C5.75479 3.68666 5.62699 2.85614 5.60328 1.33112H9.99639C10.0212 2.96267 10.1616 3.8752 10.2991 4.75265C10.3159 4.85989 10.3326 4.96676 10.3491 5.07435C10.204 5.10879 10.0625 5.1443 9.92385 5.17945C9.17164 5.37119 8.46122 5.55264 6.99951 5.55264C6.634 5.55264 6.31537 5.54127 6.03131 5.52139C5.98722 5.17625 5.93895 4.86095 5.89068 4.5535L5.89066 4.5534ZM20.6848 4.75224C20.72 4.97594 20.7543 5.1975 20.7867 5.4283C20.3216 5.50251 19.7666 5.55187 19.0066 5.55187C17.7387 5.55187 17.0367 5.41517 16.3819 5.25361C16.3478 5.01039 16.3118 4.77995 16.2761 4.5527C16.1402 3.68596 16.0124 2.85544 15.9887 1.33042H20.3818C20.4067 2.96233 20.547 3.87487 20.6848 4.75232L20.6848 4.75224ZM16.0824 18.4334C16.0236 17.8359 15.9837 17.1232 15.9837 16.1429C15.9837 14.5767 16.0841 13.6882 16.2052 12.8748C16.8849 13.0431 17.6533 13.1976 19.0063 13.1976C19.6315 13.1976 20.1282 13.1638 20.5528 13.1116C20.4543 13.8619 20.3765 14.762 20.3765 16.1429C20.3765 17.2596 20.4278 18.0593 20.499 18.7233C20.0927 18.7741 19.6173 18.8071 19.0063 18.8071C17.5456 18.8071 16.8355 18.626 16.0841 18.4339C16.0836 18.4335 16.083 18.4335 16.0825 18.4335L16.0824 18.4334ZM11.0833 19.8754C11.0496 19.6598 11.0164 19.4454 10.9851 19.2238C11.4985 19.1272 12.1104 19.0591 13.0049 19.0591C14.1112 19.0591 14.7864 19.1631 15.3757 19.297C15.4128 19.5689 15.4524 19.8235 15.4917 20.0746C15.6424 21.0346 15.7844 21.9415 15.7844 23.8074C15.7844 24.2488 15.7761 24.633 15.7618 24.9802C15.0925 24.8162 14.329 24.6681 13.0048 24.6681C12.338 24.6681 11.8182 24.7068 11.3759 24.765C11.3849 24.47 11.3916 24.1589 11.3916 23.8074C11.3913 21.8406 11.2347 20.8415 11.0832 19.8753L11.0833 19.8754ZM13.0046 18.0407C12.0665 18.0407 11.4114 18.1152 10.8698 18.2168C10.8221 17.6629 10.7906 17.0085 10.7906 16.1428C10.7906 14.3891 10.9164 13.4837 11.0565 12.584C11.5557 12.4941 12.1502 12.4316 13.0046 12.4316C14.1393 12.4316 14.8201 12.5413 15.4203 12.6802C15.2947 13.5214 15.1837 14.4889 15.1837 16.1429C15.1837 17.0036 15.2146 17.6725 15.2609 18.241C14.6962 18.1274 14.0143 18.0408 13.0045 18.0408L13.0046 18.0407ZM1.35898 12.4372C2.5749 12.4653 3.23232 12.6297 3.91725 12.8044C4.24621 12.8882 4.58409 12.9723 4.98281 13.0419C4.88013 13.8057 4.79783 14.7196 4.79783 16.1427C4.79783 17.2069 4.84442 17.9831 4.91027 18.6286C4.61256 18.5701 4.34582 18.5026 4.07463 18.4334C3.381 18.2565 2.65836 18.0758 1.35872 18.0463L1.35898 12.4372ZM5.59781 16.1428C5.59781 14.7488 5.67733 13.8906 5.78001 13.1456C6.13129 13.1772 6.52636 13.1974 6.99871 13.1974C8.53999 13.1974 9.32291 12.9975 10.0805 12.8044C10.1251 12.793 10.1695 12.782 10.2138 12.7706C10.0939 13.5916 9.99063 14.5474 9.99063 16.1428C9.99063 17.0809 10.0269 17.795 10.0805 18.394C10.028 18.4071 9.97528 18.4203 9.92339 18.4338C9.17118 18.6255 8.46076 18.807 6.99906 18.807C6.49654 18.807 6.0872 18.7846 5.73006 18.7484C5.6525 18.0876 5.59781 17.3 5.59781 16.1428V16.1428ZM15.7842 8.48346C15.7842 10.0046 15.6893 10.8863 15.5729 11.6806C14.946 11.5353 14.2069 11.4132 13.0049 11.4132C12.2558 11.4132 11.6879 11.4608 11.2131 11.5314C11.3127 10.7776 11.3916 9.87434 11.3916 8.48314C11.3916 7.37562 11.3411 6.57989 11.2708 5.91951C11.7264 5.84956 12.2708 5.80376 13.0052 5.80376C14.3037 5.80376 15.0088 5.94721 15.6776 6.11375C15.7406 6.72767 15.7841 7.45878 15.7841 8.48348L15.7842 8.48346ZM21.1767 16.1428C21.1767 14.6387 21.2696 13.7599 21.384 12.9723C21.6323 12.9191 21.862 12.8619 22.0868 12.8047C22.7718 12.63 23.4289 12.4656 24.644 12.4376V18.047C23.3449 18.0765 22.6228 18.2572 21.9295 18.4341C21.7199 18.4877 21.5121 18.5395 21.2919 18.5878C21.2239 17.9583 21.1767 17.2094 21.1767 16.1428V16.1428ZM24.644 11.4192C23.3449 11.4487 22.6228 11.6294 21.9295 11.8063C21.8025 11.8386 21.6756 11.8705 21.5472 11.9014C21.67 11.0702 21.7771 10.1083 21.7771 8.48344C21.7771 7.56736 21.7423 6.86607 21.6906 6.27559C21.8254 6.24328 21.9574 6.21026 22.0868 6.17724C22.7718 6.00254 23.4289 5.83814 24.644 5.81009L24.644 11.4192ZM20.9769 8.48346C20.9769 10.2539 20.8488 11.16 20.7071 12.0683C20.2582 12.1354 19.7233 12.1795 19.0063 12.1795C17.7231 12.1795 17.0194 12.0396 16.3579 11.8755C16.4789 11.0503 16.5841 10.0916 16.5841 8.48354C16.5841 7.58875 16.5509 6.90027 16.5013 6.31797C17.1148 6.4568 17.8453 6.57042 19.0065 6.57042C19.8101 6.57042 20.4049 6.51538 20.9002 6.4362C20.9465 6.98408 20.977 7.63107 20.977 8.48352L20.9769 8.48346ZM15.4917 4.75197C15.5071 4.84961 15.5221 4.9469 15.5372 5.04455C14.9178 4.90288 14.1837 4.7857 13.0049 4.7857C12.2172 4.7857 11.629 4.83825 11.1397 4.91495C11.121 4.79245 11.1023 4.67208 11.0833 4.55242C10.9474 3.68568 10.8196 2.85515 10.7959 1.33014H15.189C15.2139 2.96205 15.3542 3.87459 15.4918 4.75203L15.4917 4.75197ZM6.99894 6.56995C8.54021 6.56995 9.32314 6.37004 10.0807 6.17688C10.2132 6.14315 10.3458 6.11013 10.4803 6.07782C10.5458 6.69884 10.5913 7.43849 10.5913 8.4831C10.5913 10.0127 10.4953 10.8958 10.3781 11.694C10.2227 11.7306 10.0718 11.7682 9.92362 11.8062C9.17141 11.998 8.46099 12.1794 6.99928 12.1794C6.58913 12.1794 6.24229 12.1641 5.93286 12.1393C6.06958 11.2509 6.1982 10.2649 6.1982 8.48342C6.1982 7.70261 6.17281 7.07839 6.13375 6.54436C6.39547 6.55963 6.67755 6.56993 6.99896 6.56993L6.99894 6.56995ZM5.39795 8.48346C5.39795 10.2361 5.2724 11.1419 5.13232 12.041C4.74198 11.9746 4.41076 11.8922 4.07455 11.8063C3.38092 11.6294 2.65827 11.4487 1.35864 11.4192L1.35892 5.80978C2.57484 5.83783 3.23226 6.00223 3.91718 6.17693C4.33543 6.28345 4.76625 6.39104 5.32317 6.46702C5.36837 7.00922 5.39795 7.64689 5.39795 8.48353L5.39795 8.48346ZM1.35891 19.065C2.57483 19.0931 3.23225 19.2575 3.91718 19.4322C4.26316 19.5202 4.61806 19.609 5.04467 19.6804C5.06476 19.8135 5.08513 19.9449 5.10549 20.0745C5.25589 21.0346 5.39791 21.9415 5.39791 23.8074C5.39791 24.4049 5.38228 24.897 5.35745 25.3314C4.86387 25.2611 4.47353 25.1631 4.07453 25.0611C3.3809 24.8843 2.65825 24.7036 1.35862 24.6741L1.35891 19.065ZM5.89016 19.8757C5.88514 19.8444 5.8804 19.8132 5.87565 19.7816C6.20322 19.8082 6.56956 19.8249 6.999 19.8249C8.54028 19.8249 9.3232 19.625 10.0808 19.4318C10.1198 19.4219 10.1586 19.4123 10.1974 19.4023C10.2303 19.6346 10.2644 19.8561 10.2987 20.0745C10.4493 21.0346 10.5914 21.9415 10.5914 23.8073C10.5914 24.2182 10.5836 24.5761 10.5713 24.9049C10.3439 24.9546 10.1318 25.0078 9.92341 25.0611C9.17148 25.2532 8.46077 25.4343 6.99928 25.4343C6.68371 25.4343 6.40861 25.4243 6.155 25.4094C6.18123 24.9503 6.19825 24.4315 6.19825 23.8073C6.19797 21.8409 6.04173 20.8418 5.89022 19.8756L5.89016 19.8757ZM11.0832 27.7395C11.1728 27.1689 11.2632 26.5813 11.3229 25.7951C11.7682 25.7294 12.2975 25.6864 13.0048 25.6864C14.3153 25.6864 15.0212 25.8324 15.6953 26.001C15.6409 26.5865 15.5673 27.0574 15.4917 27.5407C15.3541 28.4181 15.2138 29.3313 15.1889 30.9632H10.7955C10.8192 29.4375 10.9473 28.6066 11.0832 27.7395L11.0832 27.7395ZM19.006 25.4348C17.8478 25.4348 17.1628 25.3204 16.5534 25.1773C16.5724 24.7757 16.5839 24.3269 16.5839 23.8078C16.5839 21.8414 16.4273 20.8423 16.2758 19.8757C16.2566 19.7525 16.2373 19.6297 16.2186 19.5061C16.8952 19.6733 17.6623 19.8253 19.006 19.8253C19.6706 19.8253 20.1889 19.787 20.6304 19.7291C20.6482 19.8459 20.6661 19.9606 20.6839 20.0749C20.8346 21.035 20.9766 21.9419 20.9766 23.8078C20.9766 24.3841 20.9619 24.8617 20.9387 25.2849C20.4426 25.373 19.8519 25.4347 19.0059 25.4347L19.006 25.4348ZM21.4688 19.8757C21.454 19.7809 21.4393 19.6865 21.4247 19.5913C21.6574 19.5406 21.8742 19.4862 22.0866 19.4323C22.7716 19.2576 23.4286 19.0932 24.6438 19.0651V24.6746C23.3446 24.704 22.6226 24.8848 21.9292 25.0616C21.8695 25.0769 21.8098 25.0918 21.7504 25.1067C21.7671 24.7236 21.7769 24.2957 21.7769 23.8075C21.7769 21.8411 21.6203 20.8419 21.4688 19.8757L21.4688 19.8757ZM24.6437 4.79197C23.3446 4.82144 22.6225 5.00217 21.9292 5.17899C21.8117 5.20882 21.6945 5.23829 21.5762 5.26705C21.5416 5.01885 21.5051 4.78451 21.4688 4.553C21.3329 3.68626 21.2051 2.85573 21.1814 1.33072H24.6438L24.6437 4.79197ZM4.80246 1.33071C4.82729 2.96226 4.96763 3.8748 5.10519 4.75188C5.14007 4.97522 5.17438 5.19643 5.20675 5.42652C4.78265 5.35835 4.4319 5.27028 4.07426 5.17903C3.38063 5.0022 2.65799 4.82147 1.35835 4.792V1.33075L4.80246 1.33071ZM1.35855 25.6916C2.57447 25.7197 3.23161 25.8841 3.91682 26.0591C4.32251 26.1625 4.73988 26.2669 5.27281 26.3425C5.2237 26.7757 5.16539 27.1549 5.10512 27.5402C4.96756 28.4176 4.82722 29.3308 4.80238 30.9627H1.35848L1.35855 25.6916ZM21.1813 30.9627C21.205 29.4369 21.3328 28.606 21.4686 27.739C21.544 27.2593 21.6202 26.7707 21.6782 26.1603C21.8171 26.1269 21.953 26.0932 22.0864 26.0591C22.7714 25.8844 23.4285 25.72 24.6436 25.692V30.963L21.1813 30.9627Z"
      fill={fill}
    />
  </svg>
);

const DrugUsed = ({ width = 18, height = 28, fill = "#C84C0E", className }) => (
  <svg xmlns="http://www.w3.org/2000/svg" width={width} height={height} viewBox="0 0 18 28" fill="none" className={className}>
    <path
      d="M2.66667 27.3326C1.93333 27.3326 1.30556 27.0715 0.783333 26.5493C0.261111 26.0271 0 25.3993 0 24.666V18.9326C0 17.2882 0.233333 15.7049 0.7 14.1826C1.16667 12.6604 1.9 11.1438 2.9 9.63264C2.05556 9.43264 1.36111 8.97708 0.816667 8.26597C0.272222 7.55486 0 6.75486 0 5.86597V4.46597C0 3.39931 0.461111 2.50486 1.38333 1.78264C2.30556 1.06042 3.26667 0.754861 4.26667 0.865972L16.1333 2.03264C16.5111 2.07708 16.8056 2.22708 17.0167 2.48264C17.2278 2.73819 17.3333 3.03264 17.3333 3.36597V7.33264C17.3333 7.66597 17.2167 7.96042 16.9833 8.21597C16.75 8.47153 16.4667 8.62153 16.1333 8.66597L14.9333 8.79931C15.2444 9.8882 15.6556 10.866 16.1667 11.7326C16.6778 12.5993 17.2889 13.2215 18 13.5993L16.6667 15.9326C15.4889 15.2438 14.5778 14.2938 13.9333 13.0826C13.2889 11.8715 12.7778 10.5215 12.4 9.03264L10.9333 9.16597C11.1111 10.2771 11.45 11.3993 11.95 12.5326C12.45 13.666 12.9556 14.6882 13.4667 15.5993C13.8667 16.3104 14.1667 17.0549 14.3667 17.8326C14.5667 18.6104 14.6667 19.3993 14.6667 20.1993V24.666C14.6667 25.3993 14.4056 26.0271 13.8833 26.5493C13.3611 27.0715 12.7333 27.3326 12 27.3326H2.66667ZM2.66667 4.79931V5.86597C2.66667 6.26597 2.81111 6.58819 3.1 6.83264C3.38889 7.07708 3.73333 7.17708 4.13333 7.13264L14.6667 6.13264V4.53264L4.13333 3.53264C3.73333 3.48819 3.38889 3.58819 3.1 3.83264C2.81111 4.07708 2.66667 4.39931 2.66667 4.79931Z"
      fill={fill}
    />
  </svg>
);

const ValidityTimeIcon = ({ className, styles, fill = "#C84C0E", width = "21", height = "18" }) => (
  <svg className={className} style={{ ...styles }} width={width} height={height} viewBox="0 0 21 18" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M12 0C7.03 0 3 4.03 3 9H0L3.89 12.89L3.96 13.03L8 9H5C5 5.13 8.13 2 12 2C15.87 2 19 5.13 19 9C19 12.87 15.87 16 12 16C10.07 16 8.32 15.21 7.06 13.94L5.64 15.36C7.27 16.99 9.51 18 12 18C16.97 18 21 13.97 21 9C21 4.03 16.97 0 12 0ZM11 5V10L15.28 12.54L16 11.33L12.5 9.25V5H11Z"
      fill={fill}
    />
  </svg>
);

const dynamicSvgs = {
  "Bednet": Bednet,
  "DrugUsed": DrugUsed,
  "ValidityTimeIcon":ValidityTimeIcon
};

const iconRender = (iconReq, iconFill, width, height, className) => {
  try {
    const iconProps = { width, height, fill: iconFill, className };
    const DynamicCustomIcon = dynamicSvgs[iconReq];
    if (DynamicCustomIcon) return <DynamicCustomIcon {...iconProps} />;
    const components = require("@egovernments/digit-ui-svg-components");
    const DynamicIcon = components?.[iconReq];
    if (DynamicIcon) return <DynamicIcon {...iconProps} />;
    const SvgIcon = CustomSVG?.[iconReq];
    if (SvgIcon) return <SvgIcon {...iconProps} />;
    return null;
  } catch (error) {
    return null;
  }
};

const iconMap = {
  "arrow-upward": "ArrowUpward",
  "arrow-downward": "ArrowDownward",
  dss_health_national_households_registered: "Home",
  dss_health_population_administered: "PeopleAlt",
  dss_health_drugs_administered: "Bednet",
  dss_health_households: "Home",
  dss_health_overview_drug_used: "DrugUsed",
  dss_health_user_sync_summary_iccd: "ValidityTimeIcon",
};

const Icon = ({ type = "", iconColor = "#C84C0E", width = 16, height = 16, className = "" }) => {
  const iconKey = iconMap[type.toLowerCase()];
  if (!iconKey) return null;

  return iconRender(iconKey, iconColor, width, height, className);
};

export default Icon;
